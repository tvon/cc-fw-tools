# Put your custom commands here that should be executed once
# the system init finished. By default this file does nothing.

# BEGIN: Centauri Carbon Failsafe Flasher
if [ -f /app/app ]; then
    /app/force-upgrade
fi
# END: Centauri Carbon Failsafe Flasher

# BEGIN: INITIALIZE OpenCentauri and entware
mkdir -p /user-resource/OpenCentauri/entware \
         /user-resource/OpenCentauri/root \
         /opt /root
mount -o bind /user-resource/OpenCentauri/entware /opt
mount -o bind /user-resource/OpenCentauri/root /root
# Bootstrap entware and the root homedir if needed!
if [ ! -f /opt/etc/entware_release ]; then
  cd /user-resource &&
    tar zxvf /app/OpenCentauri-bootstrap.tar.gz
fi
# Once entware is properly installed, do the things!
if [ -f /opt/etc/entware_release ]; then
  # Add entware to path for rest of rc.local execution
  export PATH="/opt/sbin:/opt/bin:$PATH"

  # Mount the USB FAT/exFAT drive if available or if it becomes available
  mount_usb_daemon &

  # Update mlocate db now, and every 24 hours!
  sh -c "while [ 1 ]; do updatedb; sleep 86400; done" &

  # Generate openssh host keys in /opt/etc/ssh (if needed, else it skips)
  ssh-keygen -A

  # Start entware system services, includes openssh
  /opt/etc/init.d/rc.unslung start

  # Start DHCPD for usb0 network interface if available! If not then don't try.
  ifconfig usb0 && udhcpc -i usb0 -b -p /tmp/usb0_udhcpc.pid -s /usr/share/udhcpc/default.script -x hostname:Centauri-Carbon &

  # Start wlan0 interface if available
  /app/oc-startwifi.sh
fi
# END: INITIALIZE OpenCentauri and entware

if [ -e %OC_APP_GADGET% ]; then
  # Gadget Mode pi present! Continuing boot without /app/app...
  exit 0
fi

# BEGIN: Start Centauri Carbon /app/app after optional delay
# logread -f -F /board-resource/lastlog &
if [ -f /app/app ]; then
    ulimit -c unlimited
    chmod +x /coredump_helper.sh
    echo "|/coredump_helper.sh %p %t" | tee /proc/sys/kernel/core_pattern
    chmod 755 /app/app
    sleep %OC_APP_BOOT_DELAY%
    /app/app &
fi
# END: Start Centauri Carbon /app/app after optional delay

exit 0
